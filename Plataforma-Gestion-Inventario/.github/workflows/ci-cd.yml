name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.4.2
        env:
          POSTGRES_DB: Plataforma_Gestion_Inventario
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Set up Node.js 22.11.0
        uses: actions/setup-python@v3
        with:
          python-version: 22.11.0

      - name: Install backend dependencies
        working-directory: ./backend
        run: python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run backend tests with Coverage
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/Plataforma_Gestion_Inventario
        run: pip install coverage
          coverage run manage.py test
          coverage report

      - name: Install backend-notificaciones dependencies
        run: npm install

      - name: Install frontend dependencies and build
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{screts.AZURE_CREDENTIALS}}

      - name: Build and push Docker image to Azure Container Registry
        run: |
          docker build -t myregistry.azurecr.io/miapp:latest .
          echo ${{ secrets.AZURE_REGISTRY_PASSWORD }} | docker login myregistry.azurecr.io -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin
          docker push myregistry.azurecr.io/miapp:latest

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: nombre-de-tu-app
          images: myregistry.azurecr.io/miapp:latest
